image: golang:latest

variables:
  # Please edit to your GitLab project
  REPO_NAME: gitlab.com/RajaSrinivasan/edev

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)

stages:
  - test
  - build
  - deploy

format:
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)

compile:
  stage: build
  script:
    - cd client; go build -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/client; cd ..
    - cd server; go build -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/server; cd ..
  artifacts:
    paths:
      - $CI_PROJECT_DIR/client
      - $CI_PROJECT_DIR/server
